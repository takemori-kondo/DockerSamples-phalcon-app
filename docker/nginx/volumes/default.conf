server {
    listen       80;
    # ipv6はコメントアウト
    # listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    # Phalcon向けにrootや各locationは調整
    # 1. URL PATHを素直に読み取ってファイルやディレクトリがなければ /index.php?_url=$uri&$args に再ルーティング
    # 2. URL PATHが/some/path/file.php や /some/path/file.php/foo/bar ならば
    #     - fastcgi_script_name部, fastcgi_path_info部に分離してマッピング
    # 要約
    # /foo/bar?x=y などなら /index.php?_url=/foo/bar&x=y
    # /some/path/file.php?x=y などなら そのまま
    # 注意点
    # nginxのdocumentroot、php-fpmの参照には同じソースが見えている必要がある
    # 今回はnginxとphp-fpmが分かれているため、ソースコードを上記2か所にマウントする必要がある
    root /var/www/public;
    index index.php index.html index.htm;

    location / {
        # Matches URLS `$_GET['_url']`
        try_files $uri $uri/ /index.php?_url=$uri&$args;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ [^/]\.php(/|$) {
        fastcgi_pass   172.16.0.10:9000;
        fastcgi_index /index.php;
        include        fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires       max;
        log_not_found off;
        access_log    off;
    }
}